% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-labels.R
\name{label-expectations}
\alias{label-expectations}
\alias{chk_labels}
\alias{expect_labels}
\title{Expectations: data label checks}
\usage{
chk_labels(x, val_labels = NULL, var_label = NULL)

expect_labels(
  vars,
  val_labels = NULL,
  var_label = NULL,
  flt = TRUE,
  data = get_testdata()
)
}
\arguments{
\item{x}{vector to check}

\item{val_labels}{a character vector of expected labels; or a named vector of
expected label-value pairs; or \code{TRUE}, to test for the presence of value
labels in general; or \code{FALSE}, to test for the absence of value labels.}

\item{var_label}{a character vector, the variable label to test for; or
\code{TRUE}, to test for the presence of a variable label in general; or
\code{FALSE}, to test for the absence of a variable label.}

\item{vars}{a list of columns generated by \link[dplyr:vars]{vars()}}

\item{flt}{a filter specifying a subset of the dataset to test}

\item{data}{data frame to test. The \link[=global-data]{global test data} is used
by default.}
}
\value{
A logical vector flagging records that have passed or failed the
check
}
\description{
These expectations test whether or not a variable is labelled as expected.
}
\examples{

df <- data.frame(
  x = labelled::labelled(c("M", "M", "F"), c(Male = "M", Female = "F"), "Sex"),
  y = labelled::labelled(c("M", "M", "F"), c(Male = "M", Female = "F", Other = "X")),
  z = c("M", "M", "F")
)

# Check for a value-label pairing
try(expect_labels(x, c(Male = "M"), data = df))

# Check that two variables have the same values
expect_labels(x, labelled::val_labels(df$y), data = df) # N.B. This passes!

# Check for the presence of a particular label
try(expect_labels(x, "Male", data = df))
expect_labels(x, var_label = "Sex", data = df)

# Check that a variable is labelled at all
try(expect_labels(z, val_labels = TRUE, data = df))
try(expect_labels(z, var_label = TRUE, data = df))

# Check that a variable isn't labelled
expect_labels(z, val_labels = FALSE, data = df)
expect_labels(z, var_label = FALSE, data = df)

}
