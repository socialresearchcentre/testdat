% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprec-expect.R
\name{expect-defunct}
\alias{expect-defunct}
\alias{filter_expect}
\alias{expect_where}
\title{Defunct expectation functions}
\usage{
filter_expect(data, expect_function, ..., not = TRUE)

expect_where(
  where,
  func,
  flt = TRUE,
  data = get_testdata(),
  args = list(),
  func_desc = NULL
)
}
\arguments{
\item{data}{A data frame to test. The \link[=global-data]{global test data} is used
by default.}

\item{expect_function}{An expectation function.}

\item{...}{Arguments to pass to expect_function.}

\item{not}{Reverse the results of the check.}

\item{where}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Columns to check}

\item{flt}{<\code{\link[dplyr:dplyr_data_masking]{data-masking}}> A filter specifying
a subset of the data frame to test.}
}
\value{
The input data frame filtered to records failing the expectation.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#defunct}{\figure{lifecycle-defunct.svg}{options: alt='[Defunct]'}}}{\strong{[Defunct]}}

These functions are defunct.
\itemize{
\item \code{expect_where()} works exactly like \code{expect_all()}. When testdat used
\code{dplyr::vars()} as standard \code{expect_where()} provided an alternative
interface using \code{\link[=dplyr_tidy_select]{tidy-select}}.
}
}
\keyword{internal}
