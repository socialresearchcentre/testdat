% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chk.R
\name{chk-generic}
\alias{chk-generic}
\alias{chk_dummy}
\alias{chk_blank}
\alias{chk_equals}
\alias{chk_range}
\alias{chk_pattern}
\alias{chk_max_length}
\alias{chk_text_miss}
\alias{chk_text_nmiss}
\alias{chk_unique}
\alias{chk_ascii}
\alias{chk_values}
\alias{chk_date_yyyymmdd}
\alias{chk_date_yyyymm}
\alias{chk_date_yyyy}
\title{Generic checking functions}
\usage{
chk_dummy(x)

chk_blank(x)

chk_equals(x, val)

chk_range(x, min, max, ...)

chk_pattern(x, pattern)

chk_max_length(x, len)

chk_text_miss(x, miss = getOption("testdat.miss_text"))

chk_text_nmiss(x, miss = getOption("testdat.miss_text"))

chk_unique(x)

chk_ascii(x)

chk_values(x, ..., miss = getOption("testdat.miss"))

chk_date_yyyymmdd(x)

chk_date_yyyymm(x)

chk_date_yyyy(x)
}
\arguments{
\item{x}{A vector to check.}

\item{val}{A scalar value for the equality check.}

\item{min}{Minimum value for range check.}

\item{max}{Maximum value for range check.}

\item{...}{Vectors of valid values.}

\item{pattern}{A \link[stringr:str_detect]{str_detect()} pattern to match.}

\item{len}{Maximum string length.}

\item{miss}{A vector of values to be treated as missing. The
\link[=testdat]{testdat.miss} or \link[=testdat]{testdat.miss_text} option is used by
default.}
}
\value{
A logical vector flagging records that have passed or failed the
check.
}
\description{
These functions provide common, simple data checks.
}
\examples{
sales <- data.frame(
  sale_id = 1:5,
  date = c("20200101", "20200101", "20200102", "20200103", "2020003"),
  sale_price = c(10, 20, 30, 40, -1),
  book_title = c(
    "Phenomenology of Spirit",
    NA,
    "Critique of Practical Reason",
    "Spirit of Trust",
    "Empiricism and the Philosophy of Mind"
  ),
  stringsAsFactors = FALSE
)

lapply(sales, function(x) any(chk_blank(x))) # Any data missing?

with(sales, date[!chk_date_yyyymmdd(date)]) # Examine invalid dates

all(chk_unique(sales$sale_id)) # Valid key?

# Clean out invalid prices
sales$sale_price[!chk_range(sales$sale_price, 0, Inf)] <- NA
sales

# detect non-ASCII characters
chk_ascii(c("a", "\U1f642"))

}
\seealso{
\link[=chk-helper]{Checking Helper Functions}
}
