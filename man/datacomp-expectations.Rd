% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-datacomp.R
\name{datacomp-expectations}
\alias{datacomp-expectations}
\alias{expect_valmatch}
\alias{expect_subset}
\title{Expectations: cross-dataset expectations}
\usage{
expect_valmatch(
  data2,
  vars,
  by,
  not = FALSE,
  flt = TRUE,
  data = get_testdata()
)

expect_subset(data2, by = NULL, not = FALSE, flt = TRUE, data = get_testdata())
}
\arguments{
\item{data2}{the dataset to compare against}

\item{vars}{a list of columns generated by \link[dplyr:vars]{vars()}}

\item{by}{a character vector of variables to join by. For details see dplyr
\link[dplyr:mutate-joins]{join()}.}

\item{not}{reverse the results of the check}

\item{flt}{a filter specifying a subset of the dataset to test}

\item{data}{data frame to test. The \link[=global-data]{global test data} is used
by default.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
These functions allow for dataset comparisons:
\itemize{
\item \code{expect_valmatch} compares the observations appearing in one dataset
(\code{data}) to the same observations, as picked out by a key (\code{by}), in
another dataset (\code{data2}). It fails if the selected variables (\code{vars})
aren't the same for those observations in both datasets.
\item \code{expect_subset} compares one dataset (\code{data}) to another (\code{data2}) and
fails if all of the observations in the first, as picked out by a key
(\code{by}), do not appear in the second
}
}
\examples{

df1 <- data.frame(
  id = 0:99,
  binomial = sample(0:1, 100, TRUE),
  even = abs(0:99\%\%2 - 1) * 0:99
)

df2 <- data.frame(
  id = 0:99,
  binomial = sample(0:1, 100, TRUE),
  odd = 0:99\%\%2 *0:99
)


# Check that same records 'succeeded' across data frames
try(expect_valmatch(df2, binomial, by = "id", data = df1))

# Check that all records in `df1`, as picked out by `id`, exist in `df2`
expect_subset(df2, by = "id", data = df1)

}
\seealso{
Other data expectations: 
\code{\link{chk-expectations}},
\code{\link{conditional-expectations}},
\code{\link{exclusivity-expectations}},
\code{\link{generic-expectations}},
\code{\link{uniqueness-expectations}}
}
\concept{data expectations}
