% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-chk.R
\name{chk-expectations}
\alias{chk-expectations}
\alias{expect_values}
\alias{expect_regex}
\alias{expect_range}
\alias{expect_date_yyyy}
\alias{expect_date_yyyymm}
\alias{expect_date_yyyymmdd}
\alias{expect_max_length}
\alias{expect_text_miss}
\alias{expect_text_nmiss}
\title{Expectations: auto-generated}
\usage{
expect_values(
  vars,
  ...,
  miss = getOption("testdat.miss"),
  flt = TRUE,
  data = get_testdata()
)

expect_regex(vars, pattern, flt = TRUE, data = get_testdata())

expect_range(vars, min, max, ..., flt = TRUE, data = get_testdata())

expect_date_yyyy(vars, flt = TRUE, data = get_testdata())

expect_date_yyyymm(vars, flt = TRUE, data = get_testdata())

expect_date_yyyymmdd(vars, flt = TRUE, data = get_testdata())

expect_max_length(vars, len, flt = TRUE, data = get_testdata())

expect_text_miss(
  vars,
  miss = getOption("testdat.miss_text"),
  flt = TRUE,
  data = get_testdata()
)

expect_text_nmiss(
  vars,
  miss = getOption("testdat.miss_text"),
  flt = TRUE,
  data = get_testdata()
)
}
\arguments{
\item{vars}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> A set of columns to
test.}

\item{...}{Vectors of valid values.}

\item{miss}{A vector of values to be treated as missing. The
\link[=testdat]{testdat.miss} option is used by default.}

\item{flt}{<\code{\link[dplyr:dplyr_data_masking]{data-masking}}> A filter specifying
a subset of the data frame to test.}

\item{data}{A data frame to test. The \link[=global-data]{global test data} is used
by default.}

\item{pattern}{A \link[stringr:str_detect]{str_detect()} pattern to match.}

\item{min}{Minimum value for range check.}

\item{max}{Maximum value for range check.}

\item{len}{Maximum string length.}
}
\description{
These expectations are auto-generated from the \verb{chk_*()} functions of the
same name. See the \link[=chk-generic]{Generic Checking Functions} entry for
details.
}
\examples{
sales <- data.frame(
  sale_id = 1:5,
  date = c("20200101", "20200101", "20200102", "20200103", "2020003"),
  sale_price = c(10, 20, 30, 40, -1),
  book_title = c(
    "Phenomenology of Spirit",
    NA,
    "Critique of Practical Reason",
    "Spirit of Trust",
    "Empiricism and the Philosophy of Mind"
  ),
  stringsAsFactors = FALSE
)

# Validate sales
try(expect_text_nmiss(book_title, data = sales)) # Titles non-missing
try(expect_date_yyyymmdd(date, data = sales)) # Dates in correct format
try(expect_values(date, 20000000:20210000, data = sales)) # Dates between 2000 and 2021
try(expect_range(sale_price, min = 0, max = Inf, data = sales)) # Prices non-negative
}
\seealso{
\link[=chk-generic]{Generic Checking Functions}

Other data expectations: 
\code{\link{conditional-expectations}},
\code{\link{datacomp-expectations}},
\code{\link{exclusivity-expectations}},
\code{\link{generic-expectations}},
\code{\link{label-expectations}},
\code{\link{proportion-expectations}},
\code{\link{uniqueness-expectations}}
}
\concept{data expectations}
